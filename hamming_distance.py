# This function matches 2 strings of the same length and searches for mismatches.
# If there are more mismatches than imposed, then the string is filtered.
def hamming_distance(string_1, string_2):
    count = 0
    for i in range(len(string_1)):
        if string_1[i] != string_2[i]:
            count += 1
    return count

print(hamming_distance("ACTCTGCTCACCACTTCGCCAAACGTGATATTGGATTAGACGATGAAGCCAAGGCCACCAATCTGGGATAATCACCTAGATCCGATGGTTAAATATGTAAGTCTTTCAGTTTACTTTAGGTGAAGACCGAGAAGCGGGAGACCTATCGGAGCGGTAAGGAGTGACCCGTCCTACGATCGGGCTGCGAAGAGACTCCGCTTCTGTAGGGGCATTCTCCAGTGCTAAGTTCCAGCTACCCGTCCCCGCCGCCCGGTGAAACTCAAGGATAATATAGGGCGCGTGGAGCCTTGGCGCGCCGATATAGACTCCCCCAGGAGAAAAGCAGAGGAATTCTCAATGTAGGCACCGTGTTGACGCATGGGCCTAAGTTAACAGGGCTTCAGAGATTATAGTCACGGTTATGCGCGGGGCATGCTATCACCCTAGCGACACCGAGCCGACCAGCCGCTAGAGGGCACTCGAACTAGGGCTTGGTAAAAGCCATTCCCCCGCACAACTCGACGACTTAGTTCTTCACCAAACGTTATCCATTCGGGAACTTAAACCTAGCCAGACACGCATGGGGTTAGTTTCAGATTTTAGCTAGTTTTTTTTCTACTCACTTCAGCGCCCGTGTGGATCCGCTTCGTGCGATTCACATGTTGTCAATATGCAGTACTGCATCGCTGGCCATGTAACCTGCTACTGCTCAGTAAGATACTGGCAAAATGAAAACAAATTTGTGTAAACTGTATCCGGGTATTGGGAGGGTCTGAGAGATCCCCGAACCGCGTCGATGAGCCCGATTCCTTTAGAATCTCCTGTTCGGTCCGCACCGGGAACTAAAGCTGAGTGTGTCAAAGGCGGGGGCATAGGACTGCTTGCCGTGAGGGGACAACTTGATGAACGAAGTGGCGTTTAACCTGAATCCACGAGTTTTCAATGCAGACCATACGCCCTCTGCGCGTAGGATTATTGCGACCCTCGACGGGTACGTTTCTAGGACGCAGCGCTGATAAAATCTTTTCCGCT", "TCTTGGTCACTGCGTGCACGTATCTCCGTTGGTCCTAGTGGTTCGCGTAGGTCCCGTAGCTGGCCTTCTCCGCCAAGCGATTGTTGATGACTATAGACGTGGCCATGAATAGCTTCAAACATTGTCTCCTTTAATCATGTCTCGTGACCGCATTCCCGCGCCAAACTTTGTAATTCCGACGTGTAACGACTCCATCTGGGAGAGCGCCTCGAAAGCATTTGGTGGCCTGGCTAGTCAGAGCGGTTGAGAAGTCGACGGGATTCCCCTGCATTCGCCACCAAGAAGATTACCGCGTAGACTATTCCAGGTACGTGATGGCTCGTAACCAGGCCTTCTGTCCTAACCGGTTTGCGCGAGAGTTAATACGGGGAACCTTGTATTTCGGAGACCGGATAGGTACGTACTGATGTGACACATCTGATATACTGGCCTCTTTGCATTTTCCGAGTTTTGCCTAACTTTCGCAGAAGCTCCAGTTTGAGGGAACGTTGTCCCACCGTATCATCAGACTGGAAGCCCACACATTTGATGAAGTGCATGATTCCTGAGGAACAATCCAAATGGAGATGGGCAAAGTCGCTGCACACCGTCGCCACCGCGATTCGCACAATGTGATAGCGACAACGTCTAATGTGTGAGTGACATATCTCTTGCCAATGAGTGTCGCCCTCGCCCTAGGTTCCCTCCGGAAGTGTCTTTGTTGGGCGTCCTTACTTCCCTCGCATTCTCTGACGTGGGCTCCGAAGGCGCGAAAGCTCTGGTTCGTAACTGCCGGAGAGTGGATGTCGCTGTCTTACAGTGATAAGCTTTCTAACGTCTCATCCCGCCCCCGCGGTATGAGACTGTTCGAGTGCGCCGACAAGTATAACCGGACCGCGTGCACTGCGCTGCAATCTCACCGCTGATGTGCTACACGGCCCTTCCGGTGGTGGCCCCACATCTGCCTACAGCTCGGTGCGGAAAGGGTTATCGAGACCAGTCGCGAACTCGTTCTTAACTGAATTTATCCGA"))